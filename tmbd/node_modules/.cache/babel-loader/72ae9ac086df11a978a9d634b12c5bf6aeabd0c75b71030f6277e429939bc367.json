{"ast":null,"code":"var _jsxFileName = \"/Users/ishan/Desktop/TS40K/ts40kk/movie/src/Pagination.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination({\n  currentPage,\n  totalPages,\n  onPageChange\n}) {\n  // console.log(totalPages)\n  // const pageNumbers = []\n  // for(let i=0;i<totalPages;i++){\n  //     pageNumbers.push(i)\n  // }\n  console.log(currentPage);\n  const maxButtons = 10;\n  const calculateButtonRange = () => {\n    const halfMaxButtons = Math.floor(maxButtons / 2);\n    let start = currentPage - halfMaxButtons;\n    let end = currentPage + halfMaxButtons;\n    if (start < 1) {\n      start = 1;\n      end = start + maxButtons - 1;\n    }\n    if (end > totalPages) {\n      end = totalPages;\n      start = end - maxButtons + 1;\n      if (start < 1) {\n        start = 1;\n      }\n    }\n    return {\n      start,\n      end\n    };\n  };\n  const {\n    start,\n    end\n  } = calculateButtonRange();\n  console.log(start, end);\n  const pageNumbers = Array.from({\n    length: end - start + 1\n  }, (_, index) => start + index);\n  //    console.log(pageNumbers)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(currentPage - 1),\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), pageNumbers.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(page),\n      disabled: currentPage === page,\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(currentPage + 1),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","console","log","maxButtons","calculateButtonRange","halfMaxButtons","Math","floor","start","end","pageNumbers","Array","from","length","_","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","page","disabled","_c","$RefreshReg$"],"sources":["/Users/ishan/Desktop/TS40K/ts40kk/movie/src/Pagination.js"],"sourcesContent":["import React from 'react'\n\nexport default function Pagination({currentPage,totalPages,onPageChange}) {\n    // console.log(totalPages)\n    // const pageNumbers = []\n    // for(let i=0;i<totalPages;i++){\n    //     pageNumbers.push(i)\n    // }\n    console.log(currentPage)\n    const maxButtons=10;\n    const calculateButtonRange =()=>{\n        const halfMaxButtons = Math.floor(maxButtons/2);\n        let start = currentPage - halfMaxButtons;\n        let end = currentPage+halfMaxButtons;\n        if(start < 1){\n            start = 1;\n            end = start + maxButtons -1 ;\n        }\n        if(end > totalPages){\n            end = totalPages;\n            start = end - maxButtons + 1;\n            if(start <1){\n                start =1;\n            }\n        }\n        return {start,end}\n    }\n   const {start,end}= calculateButtonRange();\n   console.log(start,end)\n   const pageNumbers = Array.from({length:end-start+1},(_,index)=>start+index);\n//    console.log(pageNumbers)\n  return (\n    <div className='pagination'>\n        <button onClick={()=>onPageChange(currentPage-1)}>Previous</button>\n        {pageNumbers.map((page)=>(\n            <button onClick={()=>onPageChange(page) } disabled={currentPage===page}>{page}</button>\n        ))}\n        <button onClick={()=>onPageChange(currentPage+1)}>Next</button>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,UAAUA,CAAC;EAACC,WAAW;EAACC,UAAU;EAACC;AAAY,CAAC,EAAE;EACtE;EACA;EACA;EACA;EACA;EACAC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;EACxB,MAAMK,UAAU,GAAC,EAAE;EACnB,MAAMC,oBAAoB,GAAEA,CAAA,KAAI;IAC5B,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,GAAC,CAAC,CAAC;IAC/C,IAAIK,KAAK,GAAGV,WAAW,GAAGO,cAAc;IACxC,IAAII,GAAG,GAAGX,WAAW,GAACO,cAAc;IACpC,IAAGG,KAAK,GAAG,CAAC,EAAC;MACTA,KAAK,GAAG,CAAC;MACTC,GAAG,GAAGD,KAAK,GAAGL,UAAU,GAAE,CAAC;IAC/B;IACA,IAAGM,GAAG,GAAGV,UAAU,EAAC;MAChBU,GAAG,GAAGV,UAAU;MAChBS,KAAK,GAAGC,GAAG,GAAGN,UAAU,GAAG,CAAC;MAC5B,IAAGK,KAAK,GAAE,CAAC,EAAC;QACRA,KAAK,GAAE,CAAC;MACZ;IACJ;IACA,OAAO;MAACA,KAAK;MAACC;IAAG,CAAC;EACtB,CAAC;EACF,MAAM;IAACD,KAAK;IAACC;EAAG,CAAC,GAAEL,oBAAoB,CAAC,CAAC;EACzCH,OAAO,CAACC,GAAG,CAACM,KAAK,EAACC,GAAG,CAAC;EACtB,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAACJ,GAAG,GAACD,KAAK,GAAC;EAAC,CAAC,EAAC,CAACM,CAAC,EAACC,KAAK,KAAGP,KAAK,GAACO,KAAK,CAAC;EAC9E;EACE,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAIlB,YAAY,CAACF,WAAW,GAAC,CAAC,CAAE;MAAAmB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClEZ,WAAW,CAACa,GAAG,CAAEC,IAAI,iBAClB5B,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAIlB,YAAY,CAACwB,IAAI,CAAG;MAACC,QAAQ,EAAE3B,WAAW,KAAG0B,IAAK;MAAAP,QAAA,EAAEO;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CACzF,CAAC,eACF1B,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAIlB,YAAY,CAACF,WAAW,GAAC,CAAC,CAAE;MAAAmB,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACI,EAAA,GAtCuB7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}