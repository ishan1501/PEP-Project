{"ast":null,"code":"var _jsxFileName = \"/Users/ishan/Desktop/movie/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport FavMovie from './FavMovie';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Tvlist from './Tvlist';\nimport FavTv from './FavTv';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [currentMoviePage, setCurrentMoviePage] = useState(100);\n  const [currentSeriesPage, setCurrentSeriesPage] = useState(1);\n  const [totalMoviePages, setTotalMoviePages] = useState(0);\n  const [totalSeriesPages, setTotalSeriesPages] = useState(0);\n  const fetchMovies = async page => {\n    try {\n      const reponse = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=${page}`);\n      const result = await reponse.json();\n      setMovies(result.results);\n      setTotalMoviePages(result.total_pages);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  const fetchSeries = async page => {\n    try {\n      const reponse = await fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=${page}`);\n      const result = await reponse.json();\n      setSeries(result.results);\n      setTotalMoviePages(result.total_pages);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies(currentMoviePage);\n    fetchSeries(currentSeriesPage); // Check this later\n  }, [currentMoviePage, currentSeriesPage]);\n  const handleMovieSearch = async query => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=f531333d637d0c44abc85b3e74db2186&include_adult=false&language=en-US&page=1`);\n      const result = await response.json();\n      setMovies(result.results);\n      setTotalMoviePages(result.total_pages);\n      // setCurrentPage(1);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  // const handleTvSearch = async (query)=>{\n  //   try {\n  //     const response = await fetch(`https://api.themoviedb.org/3/search/tv?query=${query}&api_key=f531333d637d0c44abc85b3e74db2186&include_adult=false&language=en-US&page=1`);\n  //     const result = await response.json();\n  //     setMovies(result.results);\n  //     setTotalMoviePages(result.total_pages);\n  //     // setCurrentPage(1);\n\n  //   } catch (error) {\n  //     console.log(\"error\",error)\n  //   }\n  // }\n  const handlePageChange = page => {\n    setCurrentMoviePage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        onSearch: handleMovieSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MovieList, {\n              movies: movies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              currentPage: currentMoviePage,\n              totalPages: totalMoviePages,\n              onPageChange: handlePageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favmov\",\n          element: /*#__PURE__*/_jsxDEV(FavMovie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tv\",\n          element: /*#__PURE__*/_jsxDEV(Tvlist, {\n            series: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favTv\",\n          element: /*#__PURE__*/_jsxDEV(FavTv, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XuwIa+A5qd/0gpq6PLuODGNm2tQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Route","Routes","SearchBar","MovieList","FavMovie","Navbar","Home","Tvlist","FavTv","Pagination","jsxDEV","_jsxDEV","App","_s","movies","setMovies","series","setSeries","currentMoviePage","setCurrentMoviePage","currentSeriesPage","setCurrentSeriesPage","totalMoviePages","setTotalMoviePages","totalSeriesPages","setTotalSeriesPages","fetchMovies","page","reponse","fetch","result","json","results","total_pages","error","console","log","fetchSeries","handleMovieSearch","query","response","handlePageChange","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","path","element","currentPage","totalPages","onPageChange","_c","$RefreshReg$"],"sources":["/Users/ishan/Desktop/movie/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport SearchBar from './SearchBar'\nimport MovieList from './MovieList'\nimport FavMovie from './FavMovie'\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport Tvlist from './Tvlist'\nimport FavTv from './FavTv'\nimport Pagination from './Pagination'\n\nexport default function App() {\n  const [movies,setMovies]=useState([])\n  const [series,setSeries]=useState([])\n  const [currentMoviePage,setCurrentMoviePage] = useState(100);\n  const [currentSeriesPage,setCurrentSeriesPage] = useState(1);\n  const [totalMoviePages,setTotalMoviePages] = useState(0)\n  const [totalSeriesPages,setTotalSeriesPages] = useState(0)\n  const fetchMovies =async (page)=>{\n   try {\n    const reponse =await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=${page}`);\n    const result = await reponse.json()\n    setMovies(result.results);\n    setTotalMoviePages(result.total_pages);\n\n   } catch (error) {\n    console.log(\"error\",error)\n   } \n  }\n  const fetchSeries =async (page)=>{\n    try {\n     const reponse =await fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=f531333d637d0c44abc85b3e74db2186&language=en-US&page=${page}`);\n     const result = await reponse.json()\n     setSeries(result.results);\n     setTotalMoviePages(result.total_pages);\n \n    } catch (error) {\n     console.log(\"error\",error)\n    } \n   }\n  useEffect(()=>{\n    fetchMovies(currentMoviePage)\n    fetchSeries(currentSeriesPage) // Check this later\n  },[currentMoviePage,currentSeriesPage])\n  const handleMovieSearch = async (query)=>{\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=f531333d637d0c44abc85b3e74db2186&include_adult=false&language=en-US&page=1`);\n      const result = await response.json();\n      setMovies(result.results);\n      setTotalMoviePages(result.total_pages);\n      // setCurrentPage(1);\n\n    } catch (error) {\n      console.log(\"error\",error)\n    }\n  }\n  // const handleTvSearch = async (query)=>{\n  //   try {\n  //     const response = await fetch(`https://api.themoviedb.org/3/search/tv?query=${query}&api_key=f531333d637d0c44abc85b3e74db2186&include_adult=false&language=en-US&page=1`);\n  //     const result = await response.json();\n  //     setMovies(result.results);\n  //     setTotalMoviePages(result.total_pages);\n  //     // setCurrentPage(1);\n\n  //   } catch (error) {\n  //     console.log(\"error\",error)\n  //   }\n  // }\n  const handlePageChange = (page)=>{\n    setCurrentMoviePage(page)\n  }\n  return (\n    <div>\n      \n      <BrowserRouter>\n      <Navbar onSearch={handleMovieSearch}/>\n        <Routes>\n          <Route path='/' element={<Home/>}/>\n          <Route path=\"/movies\" element={<div>\n            <MovieList movies={movies}/>\n            <Pagination currentPage={currentMoviePage} totalPages ={totalMoviePages} onPageChange={handlePageChange}/>\n          </div>} />\n          <Route path='/favmov' element={<FavMovie/>}/>\n          <Route path='tv' element={<Tvlist series={series}/>}/>\n          <Route path='/favTv' element={<FavTv/>}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}