{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaini\\\\Desktop\\\\React\\\\PEP-Project\\\\tmbd\\\\src\\\\Tvlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TvCard from \"./TvCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TvList({\n  series\n}) {\n  _s();\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [filteredSeries, setFilteredSeries] = useState([]);\n  useEffect(() => {\n    setFilteredSeries(series);\n  }, [series]);\n  const handleSort = () => {\n    setSortOrder(prev => prev === \"asc\" ? \"desc\" : \"asc\");\n  };\n  const handleSearch = query => {\n    const filtered = series.filter(tv => tv.name.toLowerCase().includes(query.toLowerCase()));\n    setFilteredSeries(filtered);\n  };\n  const sortedSeries = [...filteredSeries].sort((a, b) => {\n    if (sortOrder === \"asc\") {\n      return a.vote_count - b.vote_count;\n    } else {\n      return b.vote_count - a.vote_count;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSort,\n        children: [\"Sort by vote average (\", sortOrder === \"asc\" ? \"Ascending\" : \"Descending\", \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movielist\",\n      children: sortedSeries.map(tv => /*#__PURE__*/_jsxDEV(TvCard, {\n        tv: tv\n      }, tv.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TvList, \"3yGgOBEF2aNbIKPkt7VIXXZbRxY=\");\n_c = TvList;\nvar _c;\n$RefreshReg$(_c, \"TvList\");","map":{"version":3,"names":["React","useState","useEffect","TvCard","jsxDEV","_jsxDEV","TvList","series","_s","sortOrder","setSortOrder","filteredSeries","setFilteredSeries","handleSort","prev","handleSearch","query","filtered","filter","tv","name","toLowerCase","includes","sortedSeries","sort","a","b","vote_count","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","SearchBar","onSearch","className","map","id","_c","$RefreshReg$"],"sources":["C:/Users/jaini/Desktop/React/PEP-Project/tmbd/src/Tvlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TvCard from \"./TvCard\";\r\n\r\nexport default function TvList({ series }) {\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredSeries(series);\r\n  }, [series]);\r\n\r\n  const handleSort = () => {\r\n    setSortOrder((prev) => (prev === \"asc\" ? \"desc\" : \"asc\"));\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    const filtered = series.filter((tv) =>\r\n      tv.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setFilteredSeries(filtered);\r\n  };\r\n\r\n  const sortedSeries = [...filteredSeries].sort((a, b) => {\r\n    if (sortOrder === \"asc\") {\r\n      return a.vote_count - b.vote_count;\r\n    } else {\r\n      return b.vote_count - a.vote_count;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={handleSort}>\r\n          Sort by vote average (\r\n          {sortOrder === \"asc\" ? \"Ascending\" : \"Descending\"})\r\n        </button>\r\n      </div>\r\n      <SearchBar onSearch={handleSearch} />\r\n      <ul className=\"movielist\">\r\n        {sortedSeries.map((tv) => (\r\n          <TvCard key={tv.id} tv={tv} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdU,iBAAiB,CAACL,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvBH,YAAY,CAAEI,IAAI,IAAMA,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG,KAAM,CAAC;EAC3D,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,QAAQ,GAAGV,MAAM,CAACW,MAAM,CAAEC,EAAE,IAChCA,EAAE,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACpD,CAAC;IACDT,iBAAiB,CAACK,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMM,YAAY,GAAG,CAAC,GAAGZ,cAAc,CAAC,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACtD,IAAIjB,SAAS,KAAK,KAAK,EAAE;MACvB,OAAOgB,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU;IACpC,CAAC,MAAM;MACL,OAAOD,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAAU;IACpC;EACF,CAAC,CAAC;EAEF,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAQwB,OAAO,EAAEhB,UAAW;QAAAe,QAAA,GAAC,wBAE3B,EAACnB,SAAS,KAAK,KAAK,GAAG,WAAW,GAAG,YAAY,EAAC,GACpD;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN5B,OAAA,CAAC6B,SAAS;MAACC,QAAQ,EAAEpB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrC5B,OAAA;MAAI+B,SAAS,EAAC,WAAW;MAAAR,QAAA,EACtBL,YAAY,CAACc,GAAG,CAAElB,EAAE,iBACnBd,OAAA,CAACF,MAAM;QAAagB,EAAE,EAAEA;MAAG,GAAdA,EAAE,CAACmB,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACzB,EAAA,CA3CuBF,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}